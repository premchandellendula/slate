generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid()) @db.Uuid
  name        String
  email       String     @unique
  password    String
  roomsAdmin  Room[]     @relation("Admin")
  memberships RoomUser[]
  Shape       Shape[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id      Int        @id @default(autoincrement())
  name    String
  code    String     @unique
  admin   User       @relation("Admin", fields: [adminId], references: [id], onDelete: Cascade)
  adminId String     @db.Uuid
  members RoomUser[]
  Shape   Shape[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RoomUser {
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.Uuid
  room   Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId Int

  @@id([userId, roomId])
}

model Shape {
  id        Int      @id @default(autoincrement())
  message   String
  userId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  roomId    Int
  Room      Room     @relation(fields: [roomId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
